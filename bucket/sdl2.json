{
    "version": "2.26.2",
    "description": "SDL (Simple DirectMedia Layer) is a cross-platform development library designed to provide low level access to audio, keyboard, mouse, joystick, and graphics hardware via OpenGL and Direct3D.",
    "homepage": "https://www.libsdl.org",
    "license": "Zlib",
    "url": [
        "https://github.com/libsdl-org/SDL/releases/download/release-2.26.2/SDL2-devel-2.26.2-VC.zip",
        "https://github.com/libsdl-org/SDL/releases/download/release-2.26.2/SDL2-2.26.2.zip"
    ],
    "hash": [
        "8fcc6c2fbfabeddbf7872f994022aa40826ed82324e5a8671dfd4166c62c7e27",
        "31510e53266c9e4730070ec20543c25642a85db7f678445cd9cfc61c7b6eb94b"
    ],
    "installer": {
        "script": [
            "# organize files",
            "mkdir -f \"$dir\\lib\\pkgconfig\" > $null",
            "mkdir -f \"$dir\\include\\SDL2\" > $null",
            "# make arch consistent with scoop naming",
            "mv \"$dir\\SDL2-$version\\lib\\x86\" \"$dir\\SDL2-$version\\lib\\32bit\"",
            "mv \"$dir\\SDL2-$version\\lib\\x64\" \"$dir\\SDL2-$version\\lib\\64bit\"",
            "# only install the requested architecture",
            "mv \"$dir\\SDL2-$version\\lib\\$architecture\\*\" \"$dir\\lib\"",
            "",
            "$srcdir = \"$dir\\SDL2-$version\\\"",
            "mv \"$srcdir\\include\\*.h\"  \"$dir\\include\\SDL2\"",
            "rm \"$dir\\include\\*.h.*\"",
            "$pcin = \"$srcdir\\sdl2.pc.in\"",
            "$pcout = \"$dir\\lib\\pkgconfig\\sdl2.pc\"",
            "Set-Content $pcout ((gc $pcin) `",
            "    -replace \"@prefix@\",\"\" `",
            "    -replace \"@exec_prefix@\",\"`${prefix}\" `",
            "    -replace \"@libdir@\",\"`${exec_prefix}/lib\" `",
            "    -replace \"@includedir@\",\"`${prefix}/include\" `",
            "    -replace \"@SDL_VERSION@\",\"$version\" `",
            "    -replace \"@SDL_RLD_FLAGS@\",\"\" `",
            "    -replace \"@SDL_LIBS@\",\"-lSDL2\" `",
            "    -replace \"@SDL_STATIC_LIBS@\",\"-lSDL2\" `",
            "    -replace \"@SDL_CFLAGS@\",\"\" `",
            "    -replace \"@PKGCONFIG_LIBS_PRIV@\",\"\" `",
            ")",
            "",
            "rm -r \"$srcdir\"",
            "",
            "$cmdir = if (get_config NO_JUNCTIONS) { $dir } else { \"$(appdir $app $global)\\current\" }",
            "$pcdir = \"$cmdir\\lib\\pkgconfig\"",
            "# future sessions",
            "$null, $currpath = strip_path (env 'PKG_CONFIG_PATH' $global) $pcdir",
            "env 'PKG_CONFIG_PATH' $global \"$pcdir;$currpath\"",
            "$null, $currpath = strip_path (env 'CMAKE_PREFIX_PATH' $global) $cmdir",
            "env 'CMAKE_PREFIX_PATH' $global \"$cmdir;$currpath\"",
            "# this session",
            "$null, $env:PKG_CONFIG_PATH = strip_path $env:PKG_CONFIG_PATH $pcdir",
            "$env:PKG_CONFIG_PATH = \"$pcdir;$env:PKG_CONFIG_PATH\"",
            "$null, $env:CMAKE_PREFIX_PATH = strip_path $env:CMAKE_PREFIX_PATH $cmdir",
            "$env:CMAKE_PREFIX_PATH = \"$cmdir;$env:CMAKE_PREFIX_PATH\""
        ]
    },
    "uninstaller": {
        "script": [
            "$cmdir = if (get_config NO_JUNCTIONS) { $dir } else { \"$(appdir $app $global)\\current\" }",
            "$pcdir = \"$cmdir\\lib\\pkgconfig\"",
            "# future sessions",
            "$was_in_path, $newpath = strip_path (env 'PKG_CONFIG_PATH' $global) $pcdir",
            "if($was_in_path) {",
            "    write-host \"Removing $(friendly_path $pcdir) from your path.\"",
            "    env 'PKG_CONFIG_PATH' $global $newpath",
            "}",
            "$was_in_path, $newpath = strip_path (env 'CMAKE_PREFIX_PATH' $global) $cmdir",
            "if($was_in_path) {",
            "    write-host \"Removing $(friendly_path $cmdir) from your path.\"",
            "    env 'CMAKE_PREFIX_PATH' $global $newpath",
            "}",
            "# current session",
            "$was_in_path, $newpath = strip_path $env:PKG_CONFIG_PATH $pcdir",
            "if($was_in_path) { $env:PKG_CONFIG_PATH = $newpath }",
            "$was_in_path, $newpath = strip_path $env:CMAKE_PREFIX_PATH $cmdir",
            "if($was_in_path) { $env:CMAKE_PREFIX_PATH = $newpath }"
        ]
    },
    "checkver": {
        "github": "https://github.com/libsdl-org/SDL",
        "regex": "tag/release-([\\d.]+)"
    },
    "autoupdate": {
        "url": [
            "https://github.com/libsdl-org/SDL/releases/download/release-$version/SDL2-devel-$version-VC.zip",
            "https://github.com/libsdl-org/SDL/releases/download/release-$version/SDL2-$version.zip"
        ]
    }
}
