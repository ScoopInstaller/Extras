{
    "homepage": "https://github.com/yuk7/ArchWSL/",
    "description": "Install ArchLinux as a WSL Instance",
    "notes": "Even when you are logging in as 'root', some operations (like service command) require Windows administrator privileges",
    "version": "19.3.19.0",
    "url": "https://github.com/yuk7/ArchWSL/releases/download/19.3.19.0/Arch.zip",
    "hash": "49f827e7c9be489fb6cb70b01b6ac8fad2d9e6895fce11021cd713669a169830",
    "checkver": {
        "url": "https://api.github.com/repos/yuk7/ArchWSL/releases/latest",
        "jp": "$.tag_name"
    },
    "autoupdate": {
        "url": "https://github.com/yuk7/ArchWSL/releases/download/$version/Arch.zip"
    },
    "bin": "Arch.exe",
    "shortcuts": [
        [
            "Arch.exe",
            "Arch Linux"
        ]
    ],
    "##": "'rootfs' must be a 'real' directory (at least on Windows 10 RS4)",
    "persist": "data",
    "post_install": [
        "$installable = $true",
        "$user = [Security.Principal.WindowsIdentity]::GetCurrent() -as [Security.Principal.WindowsPrincipal]",
        "$permission = Get-Acl $persist_dir | select -ExpandProperty Access | where {",
        "    ($user.IsInRole($_.IdentityReference)) -and `",
        "    ($_.FileSystemRights.ToString() -eq 'FullControl') -and `",
        "    # 3 = ([Security.AccessControl.InheritanceFlags]::ContainerInherit -bor ObjectInherit)",
        "    ($_.InheritanceFlags -band 3) -and `",
        "    ($_.PropagationFlags.ToString() -ne 'NoPropagateInherit')",
        "}",
        "if ($null -eq $permission) {",
        "   warn \"Full Control access to the scoop directory is necessary to install WSL distribution.\"",
        "   warn \"Change directory security and reinstall ArchWSL.\"",
        "   $installable = $false",
        "}",
        "if ($null -eq (Get-Command wslconfig -ErrorAction SilentlyContinue)) {",
        "    warn \"WSL appears not to be enabled!\"",
        "    warn \"Run 'Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux'\"",
        "    warn \"from an elevated PowerShell. Restart your computer when prompted and reinstall ArchWSL.\"",
        "    $installable = $false",
        "}",
        "if ($installable) {",
        "    Copy-Item \"$dir\\Arch.exe\" \"$persist_dir\\data\\Arch.exe\"",
        "    \"`$si = New-Object System.Diagnostics.ProcessStartInfo '$persist_dir\\data\\Arch.exe' -Property @{ UseShellExecute = `$false; RedirectStandardInput = `$true; Arguments = `\"tgz ```\"$dir\\rootfs.tar.gz```\"`\" }",
        "    `$p = [System.Diagnostics.Process]::Start(`$si)",
        "    `$p.StandardInput.Write('y')",
        "    `$p.WaitForExit()",
        "    Remove-Item `\"$persist_dir\\data\\Arch.exe`\" -Force",
        "    `$default_uid = & '$dir\\Arch.exe' get --default-uid",
        "    if(!`$default_uid) { error 'ArchWsl is not installed!'; return }",
        "    \" | Set-Content \"$dir\\install.ps1\"",
        "    & \"$dir\\install.ps1\"",
        "}"
    ],
    "uninstaller": {
        "script": [
            "$default_uid = & \"$dir\\Arch.exe\" get --default-uid",
            "if(!$default_uid) { error 'ArchWsl is not registered!'; return }",
            "\"`\"$dir\\Arch.exe`\" clean -y\""
        ]
    }
}
